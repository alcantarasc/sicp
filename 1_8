(define (sqrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x) x)))

(define (improve guess x)
  (/ (+ (/ x (square guess)) (* guess 2)) 3))

(define (good-enough? guess x)
  (< (abs (- (cubic_square guess) x)) 0.001))

(define (square x)
  (* x x))

(define (cubic_square x)
  (* x x x))

(define (cubic_sqrt x)
  (sqrt-iter 1.0 x))
